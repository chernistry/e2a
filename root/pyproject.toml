[tool.poetry]
name = "octup-e2a"
version = "0.1.0"
description = "SLA Radar + Invoice Guard with AI Exception Analyst"
authors = ["Octup Team <team@octup.ai>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.115.0"
uvicorn = {extras = ["standard"], version = "^0.30.0"}
pydantic = "^2.9.0"
pydantic-settings = "^2.5.0"
sqlalchemy = "^2.0.35"
alembic = "^1.13.0"
psycopg = {extras = ["binary"], version = "^3.2.0"}
redis = "^5.1.0"
httpx = "^0.27.0"
tenacity = "^9.0.0"
python-json-logger = "^2.0.7"
loguru = "^0.7.2"
prometheus-client = "^0.21.0"
opentelemetry-sdk = "^1.27.0"
opentelemetry-instrumentation-fastapi = "^0.48b0"
opentelemetry-exporter-otlp = "^1.27.0"
opentelemetry-instrumentation-logging = "^0.48b0"
opentelemetry-instrumentation-sqlalchemy = "^0.48b0"
opentelemetry-instrumentation-redis = "^0.48b0"
opentelemetry-instrumentation-httpx = "^0.48b0"
prefect = "^3.0.0"
pyjwt = "^2.9.0"
pyyaml = "^6.0.2"
jinja2 = "^3.1.0"
json5 = "^0.9.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.0"
pytest-asyncio = "^0.24.0"
ruff = "^0.7.0"
mypy = "^1.11.0"
types-redis = "^4.6.0"
types-requests = "^2.32.0"
types-pyyaml = "^6.0.12"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "UP", "B", "A", "C4", "T20"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
