# ======================================================================
# IMPORTANT: Copy this file to .env and replace placeholder values
# Cloud service accounts (replace with your own):
# Supabase: your-email@example.com
# Prefect: your-email@example.com
# New Relic: your-email@example.com
# ======================================================================

OCTUP_MAX_RESOLUTION_ATTEMPTS=1

# ======================================================================
# PDF Invoice Generation Configuration
# ======================================================================
# Enable/disable PDF invoice generation
GENERATE_PDF_INVOICES=true
# Directory path where PDF invoices will be saved (container path)
PDF_INVOICES_PATH=/app/data/invoices

# ======================================================================
# Shopify Mock API Configuration
# ======================================================================
# Number of orders to generate per batch when Prefect flows connect
SHOPIFY_DEMO_API_PRODUCE_MIN_ORDERS=1001
SHOPIFY_DEMO_API_PRODUCE_MAX_ORDERS=1999
# Webhook configuration
OCTUP_API_URL=http://localhost:8000
WEBHOOK_DELAY_SECONDS=2

# ======================================================================
# Prefect Cloud
# ======================================================================
PREFECT_WORKSPACE_ID=your-workspace-id
# Prefect Cloud requires Account ID and API Key for agent/deployment:
PREFECT_ACCOUNT_ID=your-account-id
PREFECT_API_KEY=your-prefect-api-key
# Full Prefect Cloud API URL (used by agent and CLI):
PREFECT_API_URL=https://api.prefect.cloud/api/accounts/${PREFECT_ACCOUNT_ID}/workspaces/${PREFECT_WORKSPACE_ID}
# Agent queue/label (matches what you specify in Deployment):
PREFECT_AGENT_QUEUE=default
PREFECT_WORK_POOL=default-agent-pool

# ======================================================================
# Supabase Configuration
# ======================================================================
# LOCAL SUPABASE (Primary solution for development)
# Using Supabase CLI local development setup (port 54322 from supabase status)
DATABASE_URL=postgresql+asyncpg://postgres:postgres@127.0.0.1:54322/postgres
DIRECT_URL=postgresql+asyncpg://postgres:postgres@127.0.0.1:54322/postgres

# Supabase API configuration (from your running local instance)
SUPABASE_URL=http://127.0.0.1:54321
SUPABASE_ANON_KEY=your-local-anon-key
SUPABASE_SERVICE_KEY=your-local-service-key

# CLOUD SUPABASE (Alternative - comment out above and uncomment below to switch)
# DATABASE_URL=postgresql+asyncpg://postgres.your-project:your-password@aws-0-eu-central-1.pooler.supabase.com:6543/postgres?ssl=require
# DIRECT_URL=postgresql+asyncpg://postgres.your-project:your-password@aws-0-eu-central-1.pooler.supabase.com:5432/postgres?ssl=require

# ======================================================================
# Redis Configuration
# ======================================================================
# Primary solution: Local Redis (equally valid as cloud)
# For production, use local Redis in Docker or switch to Redis Cloud below
REDIS_URL=redis://redis-local:6379/0

# Alternative: Redis Cloud (comment out above and uncomment below to switch)
# REDIS_URL=rediss://default:your-redis-password@your-redis-endpoint:port/0

# ======================================================================
# Observability Configuration
# ======================================================================
# newrelic | sentry | signoz | gigapipe
OBSERVABILITY_PROVIDER=newrelic
NEW_RELIC_LICENSE_KEY=your-new-relic-license-key
# OTLP gRPC endpoint New Relic:
OTEL_EXPORTER_OTLP_ENDPOINT=https://otlp.nr-data.net:4317
# For simplicity put key directly in header:
OTEL_EXPORTER_OTLP_HEADERS=api-key=${NEW_RELIC_LICENSE_KEY}
# Additional OTEL resources:
OTEL_SERVICE_NAME=octup-e2a
OTEL_RESOURCE_ATTRIBUTES=deployment.environment=dev,team=platform

# ======================================================================
# Application / API
# ======================================================================
APP_ENV=dev
SERVICE_NAME=octup-e2a
LOG_LEVEL=INFO
PROMETHEUS_SCRAPE_PATH=/metrics

# Default tenant (demo)
X_TENANT_ID=demo-3pl

# Auth/JWT (for /admin)
JWT_SECRET=change-me-please-and-keep-long-random

# Safe request limits
MAX_REQUEST_BODY_BYTES=1048576

# ======================================================================
# AI Configuration
# ======================================================================
AI_PROVIDER_BASE_URL=https://openrouter.ai/api/v1
AI_MODEL=mistralai/mistral-nemo
AI_API_KEY=your-openrouter-api-key
AI_MAX_DAILY_TOKENS=200000
AI_MIN_CONFIDENCE=0.55
# Cost and reliability constraints
AI_TIMEOUT_SECONDS=3
AI_RETRY_MAX_ATTEMPTS=2
AI_SAMPLING_SEVERITY=important_only   # all|important_only|off
AI_MODE=full  # full|fallback|smart - for testing we'll use full mode

# ======================================================================
# Slack Integration Configuration (OPTIONAL)
# ======================================================================
SLACK_BOT_TOKEN=your-slack-bot-token
SLACK_BOT_USER_ID=your-slack-bot-user-id
SLACK_SIGNING_SECRET=your-slack-signing-secret
SLACK_DEFAULT_CHANNEL=#octup-alerts
SLACK_NOTIFICATION_ENABLED=false

# ======================================================================
# UNUSED ENVIRONMENT VARIABLES
# ======================================================================
# The following variables are defined but not currently used in the codebase.
# They are commented out but kept for reference.

# Prefect Flow naming (infrastructure flow parameters) - NOT USED
# PREFECT_FLOW_NAME=invoice_validate_nightly
# PREFECT_DEPLOYMENT_NAME=nightly
# PREFECT_SCHEDULE_CRON=0 1 * * *

# Datasets / Local paths - NOT USED
# KAGGLE_DATASET_SLUG=/data/dataset
# DATASET_EVENTS_DIR=./data/events

# Alternative observability providers - NOT USED
# SIGNOZ_OTLP_ENDPOINT=
# SIGNOZ_OTLP_HEADERS=
# GIGAPIPE_OTLP_ENDPOINT=
# GIGAPIPE_OTLP_HEADERS=

# Sentry configuration - NOT USED
# SENTRY_DSN=
# SENTRY_ENV=dev
